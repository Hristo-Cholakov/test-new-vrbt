name: Generate Release Notes

on:
  push:
    branches:
      - main
      - master

jobs:
  generate-release-notes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check if conventional-changelog-cli is installed
        id: check-install
        run: |
          if ! command -v conventional-changelog &> /dev/null; then
            echo "conventional-changelog-cli is not installed."
            echo "Installing it now..."
            npm install -g conventional-changelog-cli
          else
            echo "conventional-changelog-cli is already installed."
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Get the last successful commit SHA
        id: last-successful-sha
        run: |
          LAST_SHA=$(git log -1 --pretty=%h ${{ github.event.before }})
          echo "LAST_SHA=$LAST_SHA" >> $GITHUB_ENV
        if: steps.check-install.outcome == 'success'

      - name: Generate Release Notes
        if: steps.check-install.outcome == 'success'
        run: |
          conventional-changelog -p angular -i CHANGELOG.md -s
          # Extract and append Git commit messages from the last successful push onwards
          git log $LAST_SHA..HEAD --format="%s" >> CHANGELOG.md
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Commit and push changes
        if: steps.check-install.outcome == 'success'
        run: |
          git config --global user.email "svc-wwcoe-ci-admin@vmware.com"
          git config --global user.name "WWCoE CI admin"
          git add CHANGELOG.md
          git commit -m "chore(release): Update changelog [skip ci]"
          git push
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
